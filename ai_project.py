# -*- coding: utf-8 -*-
"""AI project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/111zNsyY-233Fi0r5XhoLt2-xYZV1P-ju
"""

# Use a pipeline as a high-level helper
from transformers import pipeline

pipe = pipeline("image-classification", model="dima806/facial_emotions_image_detection")

# Load model directly
from transformers import AutoImageProcessor, AutoModelForImageClassification

processor = AutoImageProcessor.from_pretrained("dima806/facial_emotions_image_detection")
model = AutoModelForImageClassification.from_pretrained("dima806/facial_emotions_image_detection")

pip install gradio

import gradio as gr
from transformers import pipeline
from PIL import Image

# Load the image classification pipeline
#pipe = pipeline("image-classification", model="dima806/facial_emotions_image_detection")

# Define a function for prediction
def classify_emotion(image):
    predictions = pipe(image)
    return {pred['label']: pred['score'] for pred in predictions}

# Gradio interface
image_input = gr.Image(type="pil", label="Upload an image")
label_output = gr.Label(num_top_classes=5, label="Predicted Emotions")

# Create the Gradio interface
gr.Interface(fn=classify_emotion,
             inputs=image_input,
             outputs=label_output,
             title="Facial Emotion Detector",
             description="Upload an image, and the model will predict the facial emotions.",
             live=False).launch()